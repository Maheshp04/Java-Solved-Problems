Given an integer n, print a symmetric number pyramid where:
Each row i starts from 1 and increases up to i,
Then decreases back down to 1.
The pattern should be center-aligned using spaces.
Input Format

A single integer n representing the number of rows.
Constraints

1≤n≤100
Output Format

Print the symmetric pyramid pattern with proper spacing between numbers and rows.
Sample Input 0

4
Sample Output 0

      1
    1 2 1
  1 2 3 2 1
1 2 3 4 3 2 1
Sample Input 1

5
Sample Output 1

        1
      1 2 1
    1 2 3 2 1
  1 2 3 4 3 2 1
1 2 3 4 5 4 3 2 1

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        for(int i=0;i<n;i++){
            int space=n-i-1;
            for(int j=0;j<space;j++){
                System.out.print("  ");
            }
            int star=2*i+1;
            int c=1;
            for(int k=0;k<star;k++){
                System.out.print(c+" ");
                if(k<star/2)
                    c++;
                else
                    c--;
            }
        System.out.println();
        }
    }
}
